package app;

import java.io.File;
import java.io.IOException;
import java.util.*;

import org.apache.commons.io.FileUtils;

public class Main {

	private static final String file = "file.txt";
	private static List<Prodotto> catalogo = new ArrayList<>();
	
	private static boolean uploadedDati = false;
	
	
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		
		int opzione = 1;
		
		while(opzione != 0) {
			System.out.println("Digita il numero corrispondente a le seguenti operazioni:");
			System.out.println("Aggiungi un libro");
			System.out.println("Aggiungi una rivista");
			System.out.println("Rimuovi un prodotto");
			System.out.println("Cerca con codice univoco IBSN");
			System.out.println("Cerca per anno di pubblicazione del prodotto");
			System.out.println("Cerca per Autore del prodotto");
			System.out.println("Salva su disco dell'archivio");
			System.out.println("Carica dal disco dell'archivio");
			
			opzione = input.nextInt();
			input.nextLine();
			
			switch (opzione) {
			
			case 1:
				if(!uploadedDati) {
					System.out.println("Errore, Inserire caratteristiche del prodotto");
					break;
				}
				
				try {
					System.out.println("Inserisci il codice ISBN del libro che vuoi salvare:");
					Long isbnBookCode = input.nextLong();
					input.nextLine();
					
					System.out.println("--------------------------------------------------------");
					
					System.out.println("Inserisci il titolo del libro che vuoi salvare:");
					String bookTitle = input.nextLine();
					
					System.out.println("--------------------------------------------------------");
					
					System.out.println("Inserisci l'anno di pubblicazione del libro:");
					int bookPubblicationYear = input.nextInt();
					input.nextLine();
					
					System.out.println("--------------------------------------------------------");
					
					System.out.println("Inserisci il numero di pagine del libro:");
					int numPage = input.nextInt();
					input.nextLine();
					
					System.out.println("--------------------------------------------------------");
					
					System.out.println("Inserisci l'autore del libro:");
					String bookAuthor = input.nextLine();
					
					System.out.println("--------------------------------------------------------");
					
					System.out.println("Inserisci il genere del libro:");
					String bookGenre = input.nextLine();
					
					Libri libro = new Libri(isbnBookCode, bookTitle, numPage, bookPubblicationYear, bookAuthor, bookGenre);
					
					catalogo.add(libro);
					
				} catch (Exception e) {
					System.out.println("Errore durante l'aggiunta del libro: " + e.getMessage());
				}
				
				break;
				
			case 2:
				if(!uploadedDati) {
					System.out.println("Errore, Inserire caratteristiche del prodotto");
					break;
				}
				
				try {
					System.out.println("Inserisci il codice ISBN della rivista che vuoi salvare:");
					Long isbnmagazineCode = input.nextLong();
					input.nextLine();
					
					System.out.println("--------------------------------------------------------");
					
					System.out.println("Inserisci il titolo della rivista che vuoi salvare");
					String magazineTitle = input.nextLine();
					
					System.out.println("--------------------------------------------------------");
					
					System.out.println("Inserisci l'anno di pubblicazione della rivista che vuoi salvare");
					int magazinePubblicationYear = input.nextInt();
					input.nextLine();
					
					System.out.println("--------------------------------------------------------");
					
					System.out.println("Inserisci il numero di pagine della rivista che vuoi salvare");
					int numPage = input.nextInt();
					input.nextLine();
					
					System.out.println("--------------------------------------------------------");
					
					System.out.println("Inserisci la periodicita' della rivista tra SETTIMANALE - MENSILE - SEMESTRALE:");
					String periodicitaStringa = input.nextLine();
					Periodicita magazineType = 
					
					Riviste rivista = new Riviste(isbnmagazineCode, magazineTitle, numPage, magazinePubblicationYear, periodicita);
					
					catalogo.add(rivista);
					
				} catch (Exception e) {
					System.out.println("Errore durante l'aggiunta del libro: " + e.getMessage());
				}
				
				break;
			}
		}
		
		
	}

}
